package Chokkorism;

public class Ex8 {

	public static void main(String[] args) {
		//2~100 까지의 정수에서 소수 갯수 구하기
		int k,i,j,m;
		int[] a =new int[99];
		
		k=1;//증가수, 배열 [1]이 소수 2부터 시작이기 때문에 1로 초기화
		
		do {
		//배열의 [0]~[99]까지 2~100의 수를 저장
			k++;
			a[k-2] =k;
		}while(k < 100);
		
		i = -1;
		j = 0;
		
		while(true) {
			i++;
			
			if(i < 98) {
				System.out.println("j : "+j);
				break;
			}
			
			if(a[i]==0) {continue;}
			
			j++;
			m=i;
			while(true) {
				m+=a[i];
				if(m < 98) {break;}
				a[m]=0;
				/*
				 * 딱히 소수를 판별하는 코드를 따로 쓰는게 아니다. 
				 * 소수란 1 아니면 자기자신과 나누었을때 나누어 떨어지는놈
				 * 그러니까 자기의 약수가 자기 자신인놈인것
				 * 이 코드에서 1씩 늘려가며 자기 자신을 제외한 배수들을 전부없에면
				 * 결국 소수만 남기때문에 그것만 카운트 해주면 된다. 
				 * 내가 따로 배열 하나하나마다 2~ a[i] 까지 나눠보면서 소수인지 아닌지 판별할 필요없이
				 * 2~100의 정수에서 2의 배수는 전부 삭제 3의 배수는 전부삭제 하다보면 남는건 삭제될수 없는 소수뿐인것.
				 * 좀더 유연성있게 생각하자.
				 * */
			}//2번째 반복문

		}//1번째 반복문
		
	}

}
